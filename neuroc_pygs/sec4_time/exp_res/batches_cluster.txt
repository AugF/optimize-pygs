pubmed_cluster.log {'vars': ['gcn', 'ggnn', 'gat', 'gaan']}
      baseline       opt  real_ratio  base_sample  base_move  base_cal  opt_sample  opt_move   opt_cal         y         z  exp_ratio     1-y-z        r1        y1        z1   1-y1-z1
gcn   0.473233  0.354697    0.749518     0.004072   0.000340  0.005008    0.000053  0.000089  0.006886  0.432287  0.036072   0.541008  0.531640  1.385411  0.007542  0.012644  0.979814
ggnn  0.495487  0.336273    0.678672     0.004093   0.000343  0.005427    0.000631  0.000092  0.005932  0.414990  0.034756   0.559249  0.550254  1.213542  0.094754  0.013894  0.891352
gat   0.980861  0.539792    0.550324     0.007348   0.000347  0.011832    0.000044  0.000097  0.010600  0.376300  0.017787   0.613796  0.605914  0.896592  0.004091  0.009045  0.986864
gaan  0.985073  0.793365    0.805387     0.005242   0.000298  0.014097    0.000055  0.000105  0.015641  0.266937  0.015191   0.723515  0.717873  1.113158  0.003506  0.006668  0.989827
amc_cluster.log {'vars': ['gcn', 'ggnn', 'gat', 'gaan']}
      baseline       opt  real_ratio  base_sample  base_move  base_cal  opt_sample  opt_move   opt_cal         y         z  exp_ratio     1-y-z        r1        y1        z1   1-y1-z1
gcn   0.504380  0.373599    0.740710     0.004395   0.000370  0.005275    0.000055  0.000103  0.007243  0.437731  0.036839   0.534922  0.525431  1.384707  0.007469  0.013966  0.978565
ggnn  0.486018  0.296312    0.609672     0.004157   0.000356  0.005160    0.000134  0.000078  0.005641  0.429777  0.036763   0.542791  0.533460  1.123219  0.022885  0.013402  0.963713
gat   0.810504  0.514447    0.634725     0.005922   0.000393  0.009829    0.000065  0.000097  0.010063  0.366838  0.024322   0.616662  0.608839  1.029291  0.006395  0.009504  0.984101
gaan  0.882516  0.695387    0.787959     0.004416   0.000370  0.012810    0.000041  0.000085  0.013730  0.250954  0.021017   0.733469  0.728029  1.074291  0.002949  0.006151  0.990901
fli_cluster.log {'vars': ['gcn', 'ggnn', 'gat', 'gaan']}
      baseline       opt  real_ratio  base_sample  base_move  base_cal  opt_sample  opt_move   opt_cal         y         z  exp_ratio     1-y-z        r1        y1        z1   1-y1-z1
gcn   0.561146  0.377687    0.673064     0.004994   0.000793  0.005376    0.000430  0.000090  0.006942  0.447372  0.071042   0.491955  0.481586  1.368142  0.057635  0.012030  0.930334
ggnn  0.546403  0.343069    0.627867     0.004708   0.000772  0.005393    0.001008  0.000091  0.005690  0.432981  0.071042   0.506057  0.495976  1.240705  0.148425  0.013417  0.838158
gat   0.825659  0.502681    0.608824     0.006504   0.000781  0.009167    0.000044  0.000098  0.009843  0.395310  0.047459   0.566087  0.557231  1.075495  0.004445  0.009841  0.985714
gaan  1.035403  0.687608    0.664098     0.005605   0.000829  0.014202    0.000047  0.000086  0.013548  0.271600  0.040157   0.694478  0.688243  0.956254  0.003412  0.006262  0.990327
reddit_cluster.log {'vars': ['gcn', 'ggnn', 'gat', 'gaan']}
      baseline       opt  real_ratio  base_sample  base_move  base_cal  opt_sample  opt_move   opt_cal         y         z  exp_ratio     1-y-z        r1        y1        z1   1-y1-z1
gcn   3.240189  2.790247    0.861137     0.055512   0.002389  0.006808    0.043387  0.000304  0.012022  0.857870  0.036919   0.860713  0.105210  1.000493  0.778759  0.005464  0.215777
ggnn  3.106138  2.885973    0.929119     0.053084   0.002288  0.006671    0.047691  0.000282  0.009613  0.855593  0.036884   0.858481  0.107522  1.082282  0.828172  0.004895  0.166934
gat   3.414951  2.899838    0.849160     0.052212   0.002331  0.013654    0.038577  0.000277  0.019010  0.765597  0.034186   0.770285  0.200217  1.102396  0.666679  0.004792  0.328529
gaan  5.035995  3.004149    0.596535     0.057011   0.001873  0.037639    0.015387  0.000197  0.042089  0.590642  0.019409   0.598830  0.389948  0.996169  0.266797  0.003415  0.729788

# 数据集角度比较: 数据集越大，越能体现优化的效果, 各个模型同样的参数下在pub, amc, fli, reddit数据集下可以达到很好的优化效果
# 模型的复杂度变大，越能体现优化的有效，因为总的优化时间变长; 这是因为cluster采样sample太过耗时，采样和数据传输的时间占据了主导地位
# opt_sample能面向降低时间，但是因为线程的开销，不能全部overlap;
# opt_cal的时间差异大于base_Cal
# 结论：使用cuda优化，结果更优; 数据集的变化使得sample的时间增益，大于cal的时间增益

# 数据集增大，采样耗时比例增大，数据传输也增大，但是采样耗时增大的比例更多